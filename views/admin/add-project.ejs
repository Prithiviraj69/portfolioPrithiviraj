<%- include('../partials/header') %>

<section class="admin-add-project">
  <div class="container">
    <div class="admin-header">
      <h2>Add New Project</h2>
      <a href="/auth/logout" class="btn btn-outline">Logout</a>
    </div>
    
    <div class="admin-nav">
      <a href="/admin/dashboard" class="admin-nav-item">Dashboard</a>
      <a href="/admin/profile" class="admin-nav-item">Profile</a>
      <a href="/admin/projects" class="admin-nav-item active">Projects</a>
      <a href="/admin/messages" class="admin-nav-item">Messages</a>
    </div>
    
    <div class="back-link">
      <a href="/admin/projects"><i class="fas fa-arrow-left"></i> Back to Projects</a>
    </div>
    
    <div class="project-form-container">
      <form id="projectForm" class="admin-form" action="/admin/projects/add" method="POST" enctype="multipart/form-data" data-reset="true">
        <div class="form-section">
          <h3>Project Details</h3>
          <div class="form-group">
            <label for="title">Project Title</label>
            <input type="text" id="title" name="title" required>
          </div>
          <div class="form-group">
            <label for="description">Description</label>
            <textarea id="description" name="description" rows="5" required></textarea>
          </div>
          <div class="form-row">
            <div class="form-group">
              <label for="category">Category</label>
              <select id="category" name="category" required>
                <option value="">Select a category</option>
                <option value="DOTNET CORE">DOTNET CORE</option>
                <option value="DOTNET MVC">DOTNET MVC</option>
                <option value="BLAZOR">BLAZOR</option>
                <option value="REACT">REACT</option>
                <option value="OTHER">OTHER</option>
              </select>
              <p class="form-help">This will be used for filtering projects</p>
            </div>
            <div class="form-group">
              <label for="featured">Featured Project</label>
              <select id="featured" name="featured">
                <option value="false">No</option>
                <option value="true">Yes</option>
              </select>
            </div>
          </div>
        </div>
        
        <div class="form-section">
          <h3>Project Image</h3>
          <div class="form-group">
            <label for="coverImage">Project Logo/Image</label>
            <input type="file" id="coverImage" name="coverImage" accept="image/*" required>
            <p class="form-help">Upload a logo or representative image for your project</p>
          </div>
          <div class="image-preview-container">
            <div id="imagePreview" class="image-preview"></div>
          </div>
        </div>
        
        <div class="form-section">
          <h3>Technologies & Links</h3>
          <div class="form-group">
            <label for="techStack">Tech Stack</label>
            <input type="text" id="techStack" name="techStack" required>
            <p class="form-help">Comma-separated list (e.g., .NET Core, SQL Server, Stripe, EF Core, REST API)</p>
          </div>
          <div class="form-row">
            <div class="form-group">
              <label for="demoUrl">Project URL</label>
              <input type="url" id="demoUrl" name="demoUrl">
              <p class="form-help">The project name will link to this URL if provided</p>
            </div>
            <div class="form-group">
              <label for="githubUrl">GitHub URL</label>
              <input type="url" id="githubUrl" name="githubUrl">
            </div>
          </div>
        </div>
        
        <div class="form-actions">
          <button type="submit" class="btn btn-primary">Add Project</button>
        </div>
      </form>
      
      <div id="formMessage" class="form-message"></div>
    </div>
  </div>
</section>

<style>
  .back-link {
    margin-bottom: 20px;
  }
  
  .back-link a {
    display: inline-flex;
    align-items: center;
    gap: 5px;
  }
  
  .form-section {
    background-color: var(--bg-light);
    border-radius: var(--radius);
    padding: 20px;
    margin-bottom: 30px;
  }
  
  .form-section h3 {
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 1px solid var(--border-color);
  }
  
  .form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
  }
  
  .form-help {
    font-size: 0.9rem;
    color: var(--text-light);
    margin-top: 5px;
  }
  
  .image-preview-container {
    margin-top: 15px;
  }
  
  .image-preview {
    width: 100%;
    max-width: 300px;
    height: 200px;
    border: 2px dashed var(--border-color);
    border-radius: var(--radius);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-light);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }
  
  .image-preview::before {
    content: 'Image Preview';
  }
  
  .image-preview.has-image::before {
    content: '';
  }
  
  .form-actions {
    margin-top: 30px;
  }
  
  @media (max-width: 768px) {
    .form-row {
      grid-template-columns: 1fr;
      gap: 10px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const projectForm = document.getElementById('projectForm');
    const formMessage = document.getElementById('formMessage');
    const coverImageInput = document.getElementById('coverImage');
    const imagePreview = document.getElementById('imagePreview');
    
    // Image preview
    coverImageInput.addEventListener('change', function() {
      const file = this.files[0];
      
      if (file) {
        const reader = new FileReader();
        
        reader.onload = function(e) {
          imagePreview.style.backgroundImage = `url(${e.target.result})`;
          imagePreview.classList.add('has-image');
        };
        
        reader.readAsDataURL(file);
      } else {
        imagePreview.style.backgroundImage = '';
        imagePreview.classList.remove('has-image');
      }
    });
    
    // Form submission
    projectForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(projectForm);
      const submitBtn = projectForm.querySelector('button[type="submit"]');
      
      submitBtn.disabled = true;
      
      fetch('/admin/projects/add', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          formMessage.innerHTML = '<div class="alert alert-success">Project added successfully!</div>';
          projectForm.reset();
          imagePreview.style.backgroundImage = '';
          imagePreview.classList.remove('has-image');
          
          // Redirect to projects page after a delay
          setTimeout(() => {
            window.location.href = '/admin/projects';
          }, 2000);
        } else {
          formMessage.innerHTML = `<div class="alert alert-error">${data.message || 'Something went wrong. Please try again.'}</div>`;
        }
      })
      .catch(error => {
        formMessage.innerHTML = '<div class="alert alert-error">Something went wrong. Please try again.</div>';
      })
      .finally(() => {
        submitBtn.disabled = false;
      });
    });
  });
</script>

<%- include('../partials/footer') %>
