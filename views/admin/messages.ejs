<%- include('../partials/header') %>

<section class="admin-messages">
  <div class="container">
    <div class="admin-header">
      <h2>Messages</h2>
      <a href="/auth/logout" class="btn btn-outline">Logout</a>
    </div>
    
    <div class="admin-nav">
      <a href="/admin/dashboard" class="admin-nav-item">Dashboard</a>
      <a href="/admin/profile" class="admin-nav-item">Profile</a>
      <a href="/admin/projects" class="admin-nav-item">Projects</a>
      <a href="/admin/messages" class="admin-nav-item active">Messages</a>
    </div>
    
    <div class="messages-list">
      <% if (locals.messages && messages.length > 0) { %>
        <div class="messages-grid">
          <% messages.forEach(message => { %>
            <div class="message-card <%= message.read ? '' : 'unread' %>" data-id="<%= message._id %>">
              <div class="message-header">
                <div class="message-info">
                  <h3><%= message.subject || 'No Subject' %></h3>
                  <p class="message-meta">
                    From: <strong><%= message.name %></strong> (<a href="mailto:<%= message.email %>"><%= message.email %></a>)
                  </p>
                  <p class="message-date"><%= new Date(message.createdAt).toLocaleString() %></p>
                </div>
                <div class="message-actions">
                  <% if (!message.read) { %>
                    <button class="btn btn-sm mark-read" data-id="<%= message._id %>">Mark as Read</button>
                  <% } %>
                  <button class="btn btn-sm btn-outline delete-message" data-id="<%= message._id %>">Delete</button>
                </div>
              </div>
              <div class="message-content">
                <p><%= message.message %></p>
              </div>
            </div>
          <% }) %>
        </div>
      <% } else { %>
        <div class="no-items">
          <p>No messages found.</p>
        </div>
      <% } %>
    </div>
  </div>
</section>

<div id="deleteModal" class="modal">
  <div class="modal-content">
    <h3>Confirm Delete</h3>
    <p>Are you sure you want to delete this message? This action cannot be undone.</p>
    <div class="modal-actions">
      <button id="confirmDelete" class="btn btn-primary">Delete</button>
      <button id="cancelDelete" class="btn btn-outline">Cancel</button>
    </div>
  </div>
</div>

<style>
  .messages-grid {
    display: grid;
    gap: 20px;
  }
  
  .message-card {
    background-color: var(--bg-light);
    border-radius: var(--radius);
    padding: 20px;
    box-shadow: var(--shadow);
    transition: var(--transition);
  }
  
  .message-card.unread {
    border-left: 4px solid var(--primary-color);
    background-color: #f0f7ff;
  }
  
  .message-header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 15px;
    padding-bottom: 15px;
    border-bottom: 1px solid var(--border-color);
  }
  
  .message-info h3 {
    margin-bottom: 5px;
    font-size: 1.2rem;
  }
  
  .message-meta {
    margin-bottom: 5px;
    font-size: 0.9rem;
  }
  
  .message-date {
    font-size: 0.8rem;
    color: var(--text-light);
  }
  
  .message-actions {
    display: flex;
    gap: 10px;
  }
  
  .message-content {
    white-space: pre-line;
  }
  
  .no-items {
    background-color: var(--bg-light);
    padding: 30px;
    text-align: center;
    border-radius: var(--radius);
  }
  
  .modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    justify-content: center;
    align-items: center;
  }
  
  .modal-content {
    background-color: var(--bg-color);
    padding: 30px;
    border-radius: var(--radius);
    max-width: 400px;
    width: 100%;
  }
  
  .modal-content h3 {
    margin-bottom: 15px;
  }
  
  .modal-content p {
    margin-bottom: 20px;
  }
  
  .modal-actions {
    display: flex;
    gap: 10px;
    justify-content: flex-end;
  }
  
  @media (max-width: 768px) {
    .message-header {
      flex-direction: column;
      gap: 15px;
    }
    
    .message-actions {
      justify-content: flex-start;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const markReadButtons = document.querySelectorAll('.mark-read');
    const deleteButtons = document.querySelectorAll('.delete-message');
    const deleteModal = document.getElementById('deleteModal');
    const confirmDelete = document.getElementById('confirmDelete');
    const cancelDelete = document.getElementById('cancelDelete');
    let messageIdToDelete = null;
    
    // Mark as read
    markReadButtons.forEach(button => {
      button.addEventListener('click', async function() {
        const messageId = this.dataset.id;
        const messageCard = document.querySelector(`.message-card[data-id="${messageId}"]`);
        
        try {
          const response = await fetch(`/admin/messages/${messageId}/read`, {
            method: 'PATCH'
          });
          
          const data = await response.json();
          
          if (data.success) {
            messageCard.classList.remove('unread');
            this.remove();
          }
        } catch (err) {
          alert('Failed to mark message as read');
        }
      });
    });
    
    // Show delete modal
    deleteButtons.forEach(button => {
      button.addEventListener('click', function() {
        messageIdToDelete = this.dataset.id;
        deleteModal.style.display = 'flex';
      });
    });
    
    // Hide modal on cancel
    cancelDelete.addEventListener('click', function() {
      deleteModal.style.display = 'none';
      messageIdToDelete = null;
    });
    
    // Confirm delete
    confirmDelete.addEventListener('click', async function() {
      if (!messageIdToDelete) return;
      
      try {
        const response = await fetch(`/admin/messages/${messageIdToDelete}`, {
          method: 'DELETE'
        });
        
        const data = await response.json();
        
        if (data.success) {
          const messageCard = document.querySelector(`.message-card[data-id="${messageIdToDelete}"]`);
          messageCard.remove();
          
          // If no messages left, show no items message
          if (document.querySelectorAll('.message-card').length === 0) {
            const messagesGrid = document.querySelector('.messages-grid');
            messagesGrid.innerHTML = `
              <div class="no-items">
                <p>No messages found.</p>
              </div>
            `;
          }
        } else {
          alert(data.message || 'Failed to delete message');
        }
      } catch (err) {
        alert('Something went wrong. Please try again.');
      } finally {
        deleteModal.style.display = 'none';
        messageIdToDelete = null;
      }
    });
    
    // Close modal when clicking outside
    window.addEventListener('click', function(event) {
      if (event.target === deleteModal) {
        deleteModal.style.display = 'none';
        messageIdToDelete = null;
      }
    });
  });
</script>

<%- include('../partials/footer') %>
